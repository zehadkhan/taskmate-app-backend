generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  userName      String         @db.VarChar(100)
  email         String         @unique @db.VarChar(255)
  password      String         @db.VarChar(255)
  role          UserRole       @default(STUDENT)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  completions   CompleteTask[]
  assignedTasks Task[]         @relation("AssignedTasks")
  createdTasks  Task[]         @relation("CreatedTasks")

  @@map("users")
}

model Task {
  id          Int            @id @default(autoincrement())
  title       String         @db.VarChar(200)
  description String?
  status      TaskStatus     @default(PENDING)
  creatorId   Int
  assigneeId  Int?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  deadline    DateTime?
  points      Int            @default(10)
  completions CompleteTask[]
  assignee    User?          @relation("AssignedTasks", fields: [assigneeId], references: [id])
  creator     User           @relation("CreatedTasks", fields: [creatorId], references: [id])

  @@map("tasks")
}

model CompleteTask {
  id        Int      @id @default(autoincrement())
  taskId    Int
  userId    Int
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([taskId, userId])
  @@map("task_completions")
}

enum UserRole {
  TEACHER
  STUDENT
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}
